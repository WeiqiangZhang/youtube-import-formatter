{"version":3,"sources":["components/Home/assets/youtube_logo.png","api/youtubeApi.js","components/Youtube/services/YoutubeHelper.js","components/Youtube/index.js","components/Youtube/Youtube.js","components/Home/index.js","components/Home/Home.js","components/App/App.js","components/App/serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","axios","create","baseURL","params","part","maxResults","key","urlSplit","embedUrl","getVideoData","videoUrls","videoData","id","embededUrl","currId","map","url","index","videoId","split","concat","push","Youtube","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleGenerate","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","e","value","response","wrap","_context","prev","next","preventDefault","state","setState","loading","youtube","get","sent","snippet","data","stop","_x","apply","arguments","textAreaRef","React","createRef","generatedTextAreaRef","current","rows","prevProps","prevState","handleSnippetTextArea","ref","handleRowUpdate","target","updatedRows","scrollHeight","importArray","items","item","sentenceEnd","description","indexOf","sentenceEndIdx","Math","min","toConsumableArray","filter","end","substring","length","title","formatSnippet","join","_this2","_this$state","react_default","createElement","onSubmit","placeholder","onChange","handleChange","disabled","className","type","Component","Home","react_router_dom","to","src","require","alt","App","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6bb77e5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/youtube_logo.07b8560a.png\";","import axios from 'axios';\r\nconst KEY = 'AIzaSyCAhezourwG-9lbBmnUSSHey1h2jDqD7t8';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.googleapis.com/youtube/v3',\r\n    params: {\r\n        part: 'snippet',\r\n        maxResults: 50,\r\n        key: KEY\r\n    }\r\n})","\r\nconst urlSplit = '/watch?v=';\r\nconst embedUrl = 'https://www.youtube.com/embed/';\r\nexport function getVideoData(videoUrls) {\r\n    const videoData = { id: \"\", embededUrl: [] };\r\n    let currId = \"\";\r\n    videoUrls.map((url, index) => {\r\n        if (url) {\r\n            currId = getVideoId(url);\r\n            videoData.id = videoData.id.concat(index === 0 ? '' : ',', currId);\r\n            videoData.embededUrl.push(getEmbeddedVideoUrl(currId));\r\n        }\r\n    });\r\n    return videoData;\r\n}\r\n\r\nexport function getVideoId(videoUrl) {\r\n    return (videoUrl.split(urlSplit))[1];\r\n}\r\n\r\nexport function getEmbeddedVideoUrl(videoId) {\r\n    return embedUrl.concat(videoId);\r\n}\r\n\r\nexport function formatSnippet(snippet) {\r\n    let importArray = [];\r\n    snippet.items.map((item) => {\r\n        const data = item.snippet;\r\n        const sentenceEnd = [data.description.indexOf('\\n'), data.description.indexOf('. '), data.description.indexOf('! '), data.description.indexOf('? ')];\r\n        const sentenceEndIdx = Math.min(...sentenceEnd.filter(end => end > 0))\r\n        let description = data.description.substring(0, sentenceEndIdx);\r\n        description = description.length === 0 ? data.title : description;\r\n        importArray.push(`Youtube{${data.title}}{${description}}{https://www.youtube.com/embed/${item.id}}`);\r\n    });\r\n    return importArray;\r\n}","import Youtube from './Youtube';\r\n\r\nexport default Youtube;","import React, { Component } from 'react';\r\nimport youtube from 'api/youtubeApi';\r\nimport { getVideoData, formatSnippet } from './services/YoutubeHelper';\r\n\r\nexport default class Youtube extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      loading: false,\r\n      snippet: null\r\n    }\r\n    this.textAreaRef = React.createRef();\r\n    this.generatedTextAreaRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.textAreaRef.current.rows = 2;\r\n    this.generatedTextAreaRef.current.rows = 2;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.snippet === null && this.state.snippet) this.handleSnippetTextArea();\r\n  }\r\n\r\n  handleChange(e, ref) {\r\n    this.handleRowUpdate(ref);\r\n    this.setState({ value: e.target.value });\r\n  }\r\n\r\n  handleRowUpdate(ref) {\r\n    ref.current.rows = 1;\r\n    const updatedRows = ~~(ref.current.scrollHeight / 24);\r\n    ref.current.rows = updatedRows > 10 ? 10 : updatedRows;\r\n  }\r\n\r\n  handleGenerate = async (e) => {\r\n    e.preventDefault();\r\n    const { value } = this.state;\r\n    const url = value.split('\\n');\r\n    const videoData = getVideoData(url);\r\n    this.setState({ loading: true });\r\n    const response = await youtube.get('/videos', {\r\n      params: {\r\n        id: videoData.id\r\n      }\r\n    });\r\n    this.setState({ loading: false, snippet: response.data });\r\n  }\r\n\r\n  handleSnippetTextArea() {\r\n    const { snippet } = this.state;\r\n    this.generatedTextAreaRef.current.value = formatSnippet(snippet).join(\"\\n\");\r\n    this.handleRowUpdate(this.generatedTextAreaRef);\r\n    this.setState({ snippet: null });\r\n  }\r\n\r\n  render() {\r\n    const { value, loading } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={(e) => this.handleGenerate(e)}>\r\n          <textarea ref={this.textAreaRef} placeholder=\"YouTube URL\" value={value} onChange={(e) => this.handleChange(e, this.textAreaRef)} disabled={loading} />\r\n          <button className=\"secondary button\" type=\"submit\" disabled={loading}>Generate</button>\r\n        </form>\r\n        <textarea disabled ref={this.generatedTextAreaRef} placeholder=\"Generated Imports\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Home from './Home';\r\n\r\nexport default Home;","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles/home.scss';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <h1 className=\"text-center light-gray\">{\"Occupation Import Formatter\"}</h1>\r\n                <Link to=\"/youtube\">\r\n                    <div className=\"home__logo-container\">\r\n                        <img src={require(\"./assets/youtube_logo.png\")} alt=\"\" />\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Youtube from 'components/Youtube';\nimport Home from 'components/Home';\nimport './styles/app.scss';\nimport 'styles/Formatter.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"formatter-wrapper app\">\n        <Router>\n          <div className=\"top-bar app__top-bar\">\n            <ul className=\"menu\">\n              <li className=\"app__top-bar__list\"><Link to=\"/youtube-import-formatter/\"><span className=\"black\">Home</span></Link></li>\n              <li className=\"app__top-bar__list\"><Link to=\"/youtube-import-formatter/youtube\"><span className=\"black\">YouTube</span></Link></li>\n            </ul>\n          </div>\n          <div className=\"grid-x\">\n            <div className=\"cell small-6 small-offset-3\">\n              <Route path=\"/youtube-import-formatter/\" exact component={Home} />\n              <Route path=\"/youtube-import-formatter/youtube\" component={Youtube} />\n            </div>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './components/App/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}